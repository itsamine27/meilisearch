[package]
name = "meilisearch"
publish = false

version.workspace = true
authors.workspace = true
description.workspace = true
homepage.workspace = true
readme.workspace = true
edition.workspace = true
license.workspace = true

default-run = "meilisearch"

[dependencies]
actix-cors.workspace = true
actix-http = { workspace = true, default-features = false, features = [
    "compress-brotli",
    "compress-gzip",
    "rustls-0_23",
] }
actix-utils.workspace = true
actix-web = { workspace = true, default-features = false, features = [
    "macros",
    "compress-brotli",
    "compress-gzip",
    "cookies",
    "rustls-0_23",
] }
anyhow = { workspace = true, features = ["backtrace"] }
bstr.workspace = true
byte-unit = { workspace = true, features = ["serde"] }
bytes.workspace = true
bumpalo.workspace = true
clap = { workspace = true, features = ["derive", "env"] }
crossbeam-channel.workspace = true
deserr = { workspace = true, features = ["actix-web"] }
dump = { path = "../dump" }
either.workspace = true
file-store = { path = "../file-store" }
flate2.workspace = true
fst.workspace = true
futures.workspace = true
futures-util.workspace = true
index-scheduler = { path = "../index-scheduler" }
indexmap = { workspace = true, features = ["serde"] }
is-terminal.workspace = true
itertools.workspace = true
jsonwebtoken.workspace = true
lazy_static.workspace = true
meilisearch-auth = { path = "../meilisearch-auth" }
meilisearch-types = { path = "../meilisearch-types" }
mimalloc = { workspace = true, default-features = false }
mime.workspace = true
num_cpus.workspace = true
obkv.workspace = true
once_cell.workspace = true
ordered-float.workspace = true
parking_lot.workspace = true
permissive-json-pointer = { path = "../permissive-json-pointer" }
pin-project-lite.workspace = true
platform-dirs.workspace = true
prometheus = { workspace = true, features = ["process"] }
rand.workspace = true
rayon.workspace = true
regex.workspace = true
reqwest = { workspace = true, features = [
    "rustls-tls",
    "json",
], default-features = false }
rustls = { workspace = true, features = ["ring"], default-features = false }
rustls-pki-types = { workspace = true, features = ["alloc"] }
rustls-pemfile.workspace = true
segment.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["preserve_order"] }
sha2.workspace = true
siphasher.workspace = true
slice-group-by.workspace = true
static-files = { workspace = true, optional = true }
sysinfo.workspace = true
tar.workspace = true
tempfile.workspace = true
thiserror.workspace = true
time = { workspace = true, features = [
    "serde-well-known",
    "formatting",
    "parsing",
    "macros",
] }
tokio = { workspace = true, features = ["full"] }
toml.workspace = true
uuid = { workspace = true, features = ["serde", "v4"] }
serde_urlencoded.workspace = true
termcolor.workspace = true
url = { workspace = true, features = ["serde"] }
tracing.workspace = true
tracing-subscriber = { workspace = true, features = ["json"] }
tracing-actix-web.workspace = true
roaring.workspace = true
mopa-maintained.workspace = true
utoipa = { workspace = true, features = [
    "actix_extras",
    "macros",
    "non_strict_integers",
    "preserve_order",
    "uuid",
    "time",
    "openapi_extensions",
] }
utoipa-scalar = { workspace = true, optional = true, features = ["actix-web"] }
async-openai = { git = "https://github.com/meilisearch/async-openai", branch = "better-error-handling" }
secrecy.workspace = true
actix-web-lab = { workspace = true, default-features = false }

[dev-dependencies]
actix-rt.workspace = true
brotli.workspace = true
insta = { workspace = true, features = ["redactions"] }
manifest-dir-macros.workspace = true
maplit.workspace = true
meili-snap = { path = "../meili-snap" }
temp-env.workspace = true
urlencoding.workspace = true
wiremock.workspace = true
yaup.workspace = true

[build-dependencies]
anyhow = { workspace = true, optional = true }
cargo_toml = { workspace = true, optional = true }
hex = { workspace = true, optional = true }
reqwest = { workspace = true, features = [
    "blocking",
    "rustls-tls",
], default-features = false, optional = true }
sha-1 = { workspace = true, optional = true }
static-files = { workspace = true, optional = true }
tempfile = { workspace = true, optional = true }
zip = { workspace = true, optional = true }

[features]
default = ["meilisearch-types/all-tokenizations", "mini-dashboard"]
swagger = ["utoipa-scalar"]
test-ollama = []
mini-dashboard = [
    "static-files",
    "anyhow",
    "cargo_toml",
    "hex",
    "reqwest",
    "sha-1",
    "tempfile",
    "zip",
]
chinese = ["meilisearch-types/chinese"]
chinese-pinyin = ["meilisearch-types/chinese-pinyin"]
hebrew = ["meilisearch-types/hebrew"]
japanese = ["meilisearch-types/japanese"]
korean = ["meilisearch-types/korean"]
thai = ["meilisearch-types/thai"]
greek = ["meilisearch-types/greek"]
khmer = ["meilisearch-types/khmer"]
vietnamese = ["meilisearch-types/vietnamese"]
swedish-recomposition = ["meilisearch-types/swedish-recomposition"]
german = ["meilisearch-types/german"]
turkish = ["meilisearch-types/turkish"]

[package.metadata.mini-dashboard]
assets-url = "https://github.com/meilisearch/mini-dashboard/releases/download/v0.2.19/build.zip"
sha1 = "7974430d5277c97f67cf6e95eec6faaac2788834"
